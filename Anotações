cd dashboard

# git é um serviço a apartado de versionamento, 
# git init cria um repositório local (.git)
# sempre fazer ao criar um projeto
git init

developer@developer:~/python-521/dashboard/.git$ ls -l
total 32
drwxr-xr-x 2 developer developer 4096 mai 29 18:58 branches
-rw-r--r-- 1 developer developer   92 mai 29 18:58 config
-rw-r--r-- 1 developer developer   73 mai 29 18:58 description
-rw-r--r-- 1 developer developer   23 mai 29 18:58 HEAD
drwxr-xr-x 2 developer developer 4096 mai 29 18:58 hooks
drwxr-xr-x 2 developer developer 4096 mai 29 18:58 info
drwxr-xr-x 4 developer developer 4096 mai 29 18:58 objects
drwxr-xr-x 4 developer developer 4096 mai 29 18:58 refs

# lista de arquivos e pastas a serem ignoradas 
# e não serem sincronizadas para o repositório
> .gitignore

# OBS.: mínimo para usar o GIT: .git e .gitignore

# README.md utiliza a linguagem Markdown
# https://dillinger.io/ é um editor online de markdown

git remote add origin https://github.com/danielalvesleandro/dashboard.git
git commit -m 'primeiro commit'
# criar snaphot
git add .
git commit -am 'primeiro commit'
git push origin master

mkdir templates #scripts html
mkdir blueprints #scripts python
mkdir static #scripts css / não usado nesse projeto

cd templates/
> index.html
> sign-in.html
> docker.html
> jenkins.html
> gitlab.html

cd ../blueprints

> docker.py
> jenkins.py
> gitlab.py
> ldap.py
> __init__.py  # indica que o diretório é um módulo do python)

python3 -m virtualenv --python=$(which python3) env

source env/bin/activate

pip install flask

pip freeze > requirements.txt # imprime todas dependências do projeto, facilitando a instalação num novo projeto

# Montando o dashboard

- montar o cabeçalho do index.html
- montar o cabeçalho do docker.html

# blueprint módulo do flask / projeto independente com rotas prontas para serem reutilizadas, etc..

#  ctrl+A ctrl+K ctrl+F reestruturar código html / identações

